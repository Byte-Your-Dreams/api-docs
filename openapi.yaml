swagger: "2.0"
info:
  description: "Le API riportate di seguito vengono effettuate dall'applicativo web. Alcune chiamate API effettuate internamento, a seguito di inserimenti/aggiornamenti di dati, sono state omesse."
  title: OpenAPI definition
  version: 1.0.0
host: localhost:8000
basePath: /
schemes:
  - http
consumes:
  - application/json
  - application/vnd.pgrst.object+json;nulls=stripped
  - application/vnd.pgrst.object+json
  - text/csv
produces:
  - application/json
  - application/vnd.pgrst.object+json;nulls=stripped
  - application/vnd.pgrst.object+json
  - text/csv
paths:
  /auth/v1/token:
    post:
      summary: Login utente
      description: Effettua il login anonimo o con email e password in base al parametro grant_type.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: grant_type
          in: query
          required: true
          type: string
          enum: [anonymous, password]
          description: Tipo di grant per il login.
        - in: body
          name: credentials
          required: false
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      responses:
        "200":
          description: Accesso riuscito
          schema:
            $ref: '#/definitions/AuthTokenResponse'
        "400":
          description: Richiesta non valida
      tags:
        - Auth
  /rest/v1/messaggio:
    post:
      parameters:
        - $ref: '#/parameters/chat'
        - $ref: '#/parameters/domanda'
      responses:
        "201":
          description: Created
      tags:
        - messaggio
  /rest/v1/get_all_conversations:
    get:
      parameters:
        - $ref: '#/parameters/rowFilter.get_all_conversations.utente'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/get_all_conversations'
            type: array
        "206":
          description: Partial Content
      tags:
        - get_all_conversations
  /rest/v1/rpc/get_number_of_feedbacks:
    post:
      summary: Ottieni il numero di feedback settimanali
      description: |
        Questa funzione restituisce un conteggio aggregato dei feedback positivi e negativi per settimana, calcolati a partire dalla data del primo feedback registrato nella tabella `messaggio`.
        - **Numero della settimana**: Calcolato come il numero di settimane trascorse dalla data del primo feedback.
        - **Feedback positivi**: Numero di feedback con `feedback_check` impostato a `1`.
        - **Feedback negativi**: Numero di feedback con `feedback_check` impostato a `0`.
      parameters:
        - in: body
          name: args
          required: true
          schema:
            type: object
            description: Parametri richiesti per la funzione (vuoto per questa funzione).
      produces:
        - application/json
      responses:
        "200":
          description: |
            Risultato della funzione con il conteggio dei feedback settimanali suddivisi per categoria.
          schema:
            type: array
            items:
              $ref: '#/definitions/get_number_of_feedbacks_Response'
      tags:
        - (rpc) get_number_of_feedbacks
  /rest/v1/rpc/get_number_of_feedback_messages:
    post:
      summary: Ottieni il numero di messaggi di feedback
      description: |
        Questa funzione restituisce un conteggio aggregato dei messaggi di feedback presenti nella tabella `messaggio`, suddivisi in tre categorie:
        - **Messaggi di feedback positivi**: messaggi con `feedback_check` impostato a `1` e con un testo di feedback (`feedback_text`) non nullo.
        - **Messaggi di feedback negativi**: messaggi con `feedback_check` impostato a `0` e con un testo di feedback (`feedback_text`) non nullo.
        - **Messaggi di feedback neutri**: messaggi con `feedback_check` impostato a `0` o `1`, ma con un testo di feedback (`feedback_text`) nullo.
      parameters:
        - in: body
          name: args
          required: true
          schema:
            type: object
            description: Parametri richiesti per la funzione (vuoto per questa funzione).
      produces:
        - application/json
      responses:
        "200":
          description: |
            Risultato della funzione con il conteggio dei messaggi di feedback suddivisi per categoria.
          schema:
            $ref: '#/definitions/get_number_of_feedback_messages_Response'
      tags:
        - (rpc) get_number_of_feedback_messages
  /functions/v1/analyzeMessage:
    post:
      summary: Analizza i messaggi e restituisce statistiche sulle parole
      description: Calcola il numero medio di parole e la frequenza delle parole in un messaggio.
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        "200":
          description: Risposta con le statistiche del messaggio
          schema:
            $ref: '#/definitions/AnalyzeMessageResponse'
      tags:
        - analyzeMessage
  /rest/v1/rpc/get_feedbacks:
    post:
      summary: Ottieni i feedback con risposta e testo
      description: |
        Questa funzione restituisce un elenco di messaggi con feedback, includendo:
        - **Risposta**: Il contenuto della risposta associata al messaggio.
        - **Feedback Check**: Lo stato del feedback (bit).
        - **Feedback Text**: Il testo del feedback, se presente.
        Solo i messaggi con un valore non nullo per `feedback_check` vengono restituiti.
      parameters:
        - in: body
          name: args
          required: true
          schema:
            type: object
            description: Parametri richiesti per la funzione (vuoto per questa funzione).
      produces:
        - application/json
        - application/vnd.pgrst.object+json;nulls=stripped
        - application/vnd.pgrst.object+json
      responses:
        "200":
          description: |
            Risultato della funzione con i messaggi contenenti feedback.
          schema:
            type: array
            items:
              $ref: '#/definitions/GetFeedbacksResponse'
      tags:
        - (rpc) get_feedbacks

definitions:
  AuthTokenResponse:
    type: object
    properties:
      accessToken:
        type: string
        description: The access token for the user.
      refreshToken:
        type: string
        description: The refresh token for the user.
      expiresIn:
        type: integer
        description: Token expiration time in seconds.
  get_number_of_feedbacks_Response:
    type: object
    properties:
      week_number:
        type: integer
        description: Numero della settimana a partire dal primo feedback registrato.
      positive_feedback:
        type: integer
        description: Numero di feedback positivi per la settimana.
      negative_feedback:
        type: integer
        description: Numero di feedback negativi per la settimana.
  get_number_of_feedback_messages_Response:
    type: object
    properties:
      positive_feedback_mex:
        type: integer
        description: Numero di messaggi di feedback positivi.
      negative_feedback_mex:
        type: integer
        description: Numero di messaggi di feedback negativi.
      neutral_feedback_mex:
        type: integer
        description: Numero di messaggi di feedback neutri.
  AnalyzeMessageResponse:
      type: object
      properties:
        averageWords:
          type: number
          format: float
          description: Numero medio di parole per messaggio
        wordCounts:
          type: array
          description: Lista delle parole con il relativo conteggio
          items:
            type: object
            properties:
              word:
                type: string
                description: La parola analizzata
              count:
                type: integer
                description: Numero di occorrenze della parola
  GetFeedbacksResponse:
    type: object
    properties:
      risposta:
        type: string
        description: Contenuto della risposta associata al messaggio.
      feedback_check:
        type: string
        description: Stato del feedback (bit).
        example: "1"
      feedback_text:
        type: string
        description: Testo del feedback, se presente.
  get_all_conversations:
    properties:
      id:
        description: |-
          Note:
          This is a Primary Key.<pk/>
        format: uuid
        type: string
      utente:
        format: uuid
        type: string
      createdat:
        format: timestamp without time zone
        type: string
      messages:
        format: json[]
        items: {}
        type: array
    type: object
  
parameters:
  chat:
    name: Chat
    in: query
    description: id della chat
    type: string
  utente:
    name: Utente
    in: query
    type: string
  domanda:
    name: Domanda
    in: query
    description: domanda
    type: string
  body.get_all_conversations:
    name: get_all_conversations
    description: get_all_conversations
    required: false
    in: body
    schema:
      $ref: '#/definitions/get_all_conversations'
  
  rowFilter.get_all_conversations.utente:
    name: utente
    required: false
    format: uuid
    in: query
    type: string
  rowFilter.get_all_conversations.createdat:
    name: createdat
    required: false
    format: timestamp without time zone
    in: query
    type: string
  rowFilter.get_all_conversations.messages:
    name: messages
    required: false
    format: json[]
    in: query
    type: string